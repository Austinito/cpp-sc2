# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# template for the changelog header
header = """
  # Changelog\n
  All notable changes to this project will be documented in this file.\n
  """
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
  {% if version %}\
  ## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}
  {% else %}\
  ## Unreleased
  {% endif %}\
  {% if previous %}\
  {% if previous.commit_id and commit_id %}
  [{{ previous.commit_id | truncate(length=7, end="") }}]({{ previous.commit_id }})...\
  [{{ commit_id | truncate(length=7, end="") }}]({{ commit_id }})
  {% endif %}\
  {% endif %}\
  {% for group, commits in commits | group_by(attribute="group") %}
  ### {{ group | upper_first }}
  {% for commit in commits %}
  - {{ commit.message | split(pat="\n") | first | upper_first | trim }} ([{{ commit.id | truncate(length=7, end="") }}]({{ commit.id }}))\
    {% if commit.remote.username and commit.remote.username != "alkurbatov" %} by @{{ commit.remote.username }}{%- endif -%}
  {% endfor %}
  {% endfor %}\n
  """
# template for the changelog footer
footer = """
  <!-- generated by git-cliff -->
  """
# remove the leading and trailing whitespace from the templates
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^perf", group = "<!-- 2 -->⚡ Performance" },
  { message = "^ref|^purge", group = "<!-- 3 -->🚜 Refactor" },
  { message = "^build", group = "<!-- 4 -->👷 Build" },
  { message = "^doc", group = "<!-- 5 -->📚 Documentation" },
  { message = "^test", group = "<!-- 7 -->🧪 Tests" },
  { message = "^chore", skip = true },
  { message = ".*", group = "<!-- 9 -->💼 Other" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# ignore matching tags but include commits into the changelog
ignore_tags = "-alpha."
